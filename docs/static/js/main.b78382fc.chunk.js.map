{"version":3,"sources":["WrapperError.js","Playground.js","schema/formArray.js","Storybook.js","Tabs.js","index.js"],"names":["WrapperError","state","error","undefined","this","setState","props","children","React","Component","examples","basic","formArray","constrainedBasic","constraintsWithRef","simpleSelector","formInForm","dynamicForm","Playground","useState","JSON","stringify","schema","setSchema","realSchema","setRealSchema","setError","value","setValue","label","selectedSchema","setSelectedSchema","flow","setFlow","ref","useRef","childRef","formRef","useEffect","current","reset","babelize","e","code","generatedCode","babel","presets","replace","trim","res","Function","func","_","className","style","marginTop","href","marginRight","htmlFor","options","Object","entries","map","onChange","mode","err","console","log","maybeFlow","parse","Array","isArray","color","backgroundColor","padding","keys","onSubmit","d","watch","unsaved","dispatch","changes","from","to","doc","length","insert","actions","submit","setRef","r","showGutter","Storybook","types","string","filter","setFilter","type","onClick","cursor","textDecoration","fontWeight","item","key","index","format","marginBottom","constraints","required","alert","Tabs","tabs","defaultTab","page","setPage","id","find","content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6gFAEqBA,E,4MACjBC,MAAQ,CACJC,WAAOC,G,uDAGX,SAAkBD,GACdE,KAAKC,SAAS,CAAEH,Y,mBAGpB,WACIE,KAAKC,SAAS,CAAEH,WAAOC,M,oBAG3B,WACI,OAAIC,KAAKH,MAAMC,MACJ,2DACJE,KAAKE,MAAMC,a,GAhBgBC,IAAMC,WCe1CC,EAAW,CACfC,QACAC,UCnBU,w0CDoBVC,mBACAC,qBACAC,iBACAC,aACAC,eAyJaC,EAtJW,WACxB,MAA4BC,mBAASC,KAAKC,UAAUV,EAAO,EAAG,IAA9D,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAAoCJ,mBAASR,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,wBAAShB,GAAnC,mBAAOD,EAAP,KAAcwB,EAAd,KACA,EAA0BP,qBAA1B,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAA4CT,mBAAS,CACnDQ,MAAOhB,EACPkB,MAAO,UAFT,mBAAOC,EAAP,KAAuBC,EAAvB,KAIA,EAAwBZ,wBAAShB,GAAjC,mBAAO6B,EAAP,KAAaC,EAAb,KACMC,EAAMC,mBACNC,EAAWD,mBACXE,EAAUF,mBAEhBG,qBAAU,WACJF,EAASG,SAASH,EAASG,QAAQC,QACvCC,EAASnB,KACR,CAACA,IAEJgB,qBAAU,WACRZ,OAASvB,KACR,CAACqB,IAEJ,IAAMiB,EAAW,SAACC,GAChB,IACE,IAAMC,EAAI,+BACK,kBAAND,EAAiBtB,KAAKC,UAAUqB,EAAG,KAAM,GAAKA,EAD7C,sBAOJE,EAJYC,YAAgBF,EAAM,CACtCG,QAAS,CAAC,QAAS,YAClBH,KAE6BI,QAAQ,gBAAiB,IAAIC,OAEvDC,EADO,IAAIC,SAAS,QAAb,iBAAgCN,GACjCO,CAAK3C,IAAL2C,GACRF,GAAKxB,EAAcwB,GACvB,MAAOG,MAGX,OACE,sBAAKC,UAAU,YAAYC,MAAO,CAAEC,UAAW,QAA/C,UACE,qBAAIF,UAAU,oBAAd,+EACqE,IACnE,mBAAGG,KAAK,sCAAR,2BAFF,wBAKA,sBAAKH,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAQC,MAAO,CAAEG,YAAa,QAA7C,UACE,uBAAOC,QAAQ,WAAf,+BACA,cAAC,IAAD,CACEL,UAAU,OACVM,QAASC,OAAOC,QAAQnD,GAAUoD,KAAI,yCAAa,CACjDjC,MADoC,KAEpCF,MAFoC,SAItCA,MAAOG,EACPiC,SAAU,SAACrB,GACTX,EAAkBW,GAClBnB,EAAUmB,EAAEf,UAGhB,cAAC,IAAD,CACEqC,KAAK,aACLD,SAAU,SAACrB,GACT,IACEnB,EAAUmB,GACV,MAAOuB,GACPC,QAAQC,IAAIF,KAGhBtC,MACoB,kBAAXL,EACHF,KAAKC,UAAUC,EAAQ,KAAM,GAC7BA,IAGR,yCACA,cAAC,IAAD,CACE0C,KAAK,OACLD,SAAU,SAACrB,GACT,IACE,IAAM0B,EAAYhD,KAAKiD,MAAM3B,GACzB4B,MAAMC,QAAQH,GAChBnC,EAAQmC,GAERnC,OAAQ9B,GAEV,MAAO8D,GACPhC,OAAQ9B,GACR+D,QAAQC,IAAIF,OAIlB,kDACA,cAAC,IAAD,CACED,KAAK,OACLD,SAAU,SAACrB,GACT,IACEd,EAASR,KAAKiD,MAAM3B,IACpB,MAAOU,MAEXzB,MACmB,kBAAVA,EAAqBP,KAAKC,UAAUM,EAAO,KAAM,GAAKA,OAInE,sBAAK0B,UAAU,aAAf,UACE,mDACCnD,GAAS,sBAAMoD,MAAO,CAAEkB,MAAO,UAAtB,SAAmCtE,IAC7C,qBAAKoD,MAAO,CAAEmB,gBAAiB,UAAWC,QAAS,aAAnD,SACE,cAAC,EAAD,CAAcxC,IAAKE,EAAnB,SACE,cAAC,IAAD,CACEF,IAAKG,EACLf,OAAQE,EACRG,MAAOA,EACPK,KAAMA,GAAQ4B,OAAOe,KAAKnD,GAC1BoD,SAAU,SAACC,GAAD,OAAOX,QAAQC,IAAI/C,KAAKC,UAAUwD,EAAG,KAAM,KACrDlB,QAAS,CACPmB,MAAO,SAACC,GAAa,IAAD,EACf,OAAH7C,QAAG,IAAHA,GAAA,UAAAA,EAAKK,eAAL,SAAcyC,SAAS,CACrBC,QAAS,CACPC,KAAM,EACNC,GAAIjD,EAAIK,QAAQtC,MAAMmF,IAAIC,OAC1BC,OAAQlE,KAAKC,UAAU0D,EAAS,KAAM,OAI5CQ,QAAS,CACPC,OAAQ,CACN3D,MAAO,kBAOnB,sBAAKwB,UAAU,OAAf,UACE,+CACA,cAAC,IAAD,CACEoC,OAAQ,SAACC,GAAD,OAAQxD,EAAIK,QAAUmD,GAC9BC,YAAY,EACZ3B,KAAK,sB,yCE7FJ4B,EAtEG,WAChB,MAA4BzE,mBAAS0E,IAAMC,QAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,OACE,qBAAK3C,UAAU,YAAYC,MAAO,CAAEC,UAAW,QAA/C,SACE,sBAAKF,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAQC,MAAO,CAAEG,YAAa,QAA7C,SACE,sBACEH,MAAO,CACLmB,gBAAiB,UACjBlB,UAAW,OACXE,YAAa,OACbiB,QAAS,QALb,UAQE,uCACA,6BACGd,OAAOe,KAAKkB,KAAO/B,KAAI,SAACmC,GAAD,OACtB,oBAEEC,QAAS,kBAAMF,EAAUC,IACzB3C,MAAO,CACL6C,OAAQ,UACRC,eAAgB,YAChBC,WAAYJ,IAASF,EAAS,OAAS,UAN3C,SASGE,GATH,iBACiBA,cAczB,qBAAK5C,UAAU,QAAQC,MAAO,CAAEG,YAAa,QAA7C,SACKG,OAAOe,KAAKrD,GACVwC,KAAI,SAACwC,GAAD,oBAAaC,IAAKD,GAAShF,EAAOgF,OACtCP,QAAO,gBAAGE,EAAH,EAAGA,KAAH,OAAcF,IAAWE,KAChCnC,KAAI,WAAmB0C,GAAnB,IAAGD,EAAH,EAAGA,IAAQD,EAAX,wBACH,eAAC,EAAD,WACE,wBAAOhD,MAAO,CAAE+C,WAAY,QAA5B,wBACcC,EAAKL,KAChBK,EAAKG,QAAL,oBAA4BH,EAAKG,OAAjC,QAEH,qBACEnD,MAAO,CACLmB,gBAAiB,UACjBC,QAAS,YACTgC,aAAc,QAJlB,SAOE,cAAC,IAAD,CACEpF,OAAM,eACHiF,EADG,aAEFI,YAAa,CACXA,IAAYC,SAAZ,UAAwBL,EAAxB,mBAECD,IAGPtE,KAAM,CAACuE,GACP3B,SAAU,SAACC,GAAD,OAAOgC,MAAMzF,KAAKC,UAAUwD,EAAG,KAAM,KAC/ClB,QAAS,CAAC4B,QAAQ,CAACC,OAAO,CAAC3D,MAAM,oBAvBvC,eAA2B0E,EAA3B,YAAkCC,eCcnCM,EAtDF,SAAC,GAA0B,IAAD,EAAvBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpB,EAAwB7F,mBAAS6F,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAK7D,UAAU,oBAAf,UACE,qBAAKA,UAAU,0DAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,eAAhB,oCACA,wBACEA,UAAU,iBACV4C,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAM5C,UAAU,0BAElB,qBAAKA,UAAU,2BAA2B8D,GAAG,yBAA7C,SACE,qBAAI9D,UAAU,kCAAd,UACG0D,EAAKjD,KAAI,gBAAGqD,EAAH,EAAGA,GAAItF,EAAP,EAAOA,MAAP,OACR,oBAAIwB,UAAU,WAAd,SACE,sBAAMA,UAAU,WAAW6C,QAAS,kBAAMgB,EAAQC,IAAlD,SACGtF,SAIP,oBAAIwB,UAAU,WAAd,SACE,mBACEA,UAAU,WACVG,KAAK,6CAFP,6BAOF,oBAAIH,UAAU,WAAd,SACE,mBACEA,UAAU,WACVG,KAAK,sCAFP,iCAWV,qBAAKH,UAAU,YAAYC,MAAO,CAAEC,UAAW,QAA/C,mBACGwD,EAAKK,MAAK,qBAAGD,KAAgBF,YADhC,aACG,EAAoCI,c,MC3C7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAMT,KAAM,CACV,CACEI,GAAI,aACJtF,MAAO,aACPwF,QAAS,cAAC,EAAD,KAOX,CACEF,GAAI,YACJtF,MAAO,YACPwF,QAAS,cAAC,EAAD,MAEXL,WAAW,iBAEfS,SAASC,eAAe,U","file":"static/js/main.b78382fc.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class WrapperError extends React.Component {\n    state = {\n        error: undefined\n    }\n\n    componentDidCatch(error) {\n        this.setState({ error })\n    }\n\n    reset() {\n        this.setState({ error: undefined })\n    }\n\n    render() {\n        if (this.state.error)\n            return <div>Something wrong happened</div>\n        return this.props.children\n    }\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { Form, CodeInput } from \"@maif/react-forms\";\nimport Select from \"react-select\";\nimport \"./App.css\";\nimport \"@maif/react-forms/lib/index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport basic from \"./schema/basic.json\";\nimport formArray from \"./schema/formArray\";\nimport constrainedBasic from \"./schema/constrainedBasic.json\";\nimport constraintsWithRef from \"./schema/constraintsWithRef.json\";\nimport simpleSelector from \"./schema/selector.json\";\nimport formInForm from \"./schema/formInForm.json\";\nimport dynamicForm from \"./schema/dynamicForm.json\";\nimport * as babel from \"babel-standalone\";\nimport WrapperError from \"./WrapperError\";\n\nconst examples = {\n  basic,\n  formArray,\n  constrainedBasic,\n  constraintsWithRef,\n  simpleSelector,\n  formInForm,\n  dynamicForm,\n};\n\nexport const Playground = () => {\n  const [schema, setSchema] = useState(JSON.stringify(basic, 0, 2));\n  const [realSchema, setRealSchema] = useState(basic);\n  const [error, setError] = useState(undefined);\n  const [value, setValue] = useState();\n  const [selectedSchema, setSelectedSchema] = useState({\n    value: basic,\n    label: \"basic\",\n  });\n  const [flow, setFlow] = useState(undefined);\n  const ref = useRef();\n  const childRef = useRef();\n  const formRef = useRef();\n\n  useEffect(() => {\n    if (childRef.current) childRef.current.reset();\n    babelize(schema);\n  }, [schema]);\n\n  useEffect(() => {\n    setError(undefined);\n  }, [realSchema]);\n\n  const babelize = (e) => {\n    try {\n      const code = `() => { try { return ${\n        typeof e === \"object\" ? JSON.stringify(e, null, 2) : e\n      } } catch(err) {} }`;\n      const babelCode = babel.transform(code, {\n        presets: [\"react\", \"es2015\"],\n      }).code;\n\n      const generatedCode = babelCode.replace('\"use strict\";', \"\").trim();\n      const func = new Function(\"React\", `return ${generatedCode}`);\n      const res = func(React)();\n      if (res) setRealSchema(res);\n    } catch (_) {}\n  };\n\n  return (\n    <div className=\"container\" style={{ marginTop: \"70px\" }}>\n      <em className=\"tagline px-0 py-2\">\n        Choose a JSON schema below and check the generated form. Check the{\" \"}\n        <a href=\"https://github.com/MAIF/react-forms\">documentation</a> for more\n        details.\n      </em>\n      <div className=\"d-flex\">\n        <div className=\"col-8\" style={{ marginRight: \"10px\" }}>\n          <label htmlFor=\"selector\">Try with a schema</label>\n          <Select\n            className=\"py-2\"\n            options={Object.entries(examples).map(([k, v]) => ({\n              label: k,\n              value: v,\n            }))}\n            value={selectedSchema}\n            onChange={(e) => {\n              setSelectedSchema(e);\n              setSchema(e.value);\n            }}\n          />\n          <CodeInput\n            mode=\"javascript\"\n            onChange={(e) => {\n              try {\n                setSchema(e);\n              } catch (err) {\n                console.log(err);\n              }\n            }}\n            value={\n              typeof schema === \"object\"\n                ? JSON.stringify(schema, null, 2)\n                : schema\n            }\n          />\n          <label>Flow</label>\n          <CodeInput\n            mode=\"json\"\n            onChange={(e) => {\n              try {\n                const maybeFlow = JSON.parse(e);\n                if (Array.isArray(maybeFlow)) {\n                  setFlow(maybeFlow);\n                } else {\n                  setFlow(undefined);\n                }\n              } catch (err) {\n                setFlow(undefined);\n                console.log(err);\n              }\n            }}\n          />\n          <label>Default value</label>\n          <CodeInput\n            mode=\"json\"\n            onChange={(e) => {\n              try {\n                setValue(JSON.parse(e));\n              } catch (_) {}\n            }}\n            value={\n              typeof value === \"object\" ? JSON.stringify(value, null, 2) : value\n            }\n          />\n        </div>\n        <div className=\"col-4 px-2\">\n          <label>Generated form</label>\n          {error && <span style={{ color: \"tomato\" }}>{error}</span>}\n          <div style={{ backgroundColor: \"#ececec\", padding: \"10px 15px\" }}>\n            <WrapperError ref={childRef}>\n              <Form\n                ref={formRef}\n                schema={realSchema}\n                value={value}\n                flow={flow || Object.keys(realSchema)}\n                onSubmit={(d) => console.log(JSON.stringify(d, null, 4))}\n                options={{\n                  watch: (unsaved) => {\n                    ref?.current?.dispatch({\n                      changes: {\n                        from: 0,\n                        to: ref.current.state.doc.length,\n                        insert: JSON.stringify(unsaved, null, 2),\n                      },\n                    });\n                  },\n                  actions: {\n                    submit: {\n                      label: \"Try it\",\n                    },\n                  },\n                }}\n              />\n            </WrapperError>\n          </div>\n          <div className=\"py-2\">\n            <label>Form state</label>\n            <CodeInput\n              setRef={(r) => (ref.current = r)}\n              showGutter={false}\n              mode=\"json\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Playground;\n","const schema = `{\n    \"users\": {\n        type: \"object\",\n        format: \"form\",\n        array: true,\n        onAfterChange: ({ setValue, entry, previousValue, value, getValue }) => {\n            if (value && previousValue) {\n                if (value.fullname !== previousValue.fullname) {\n                    const parts = value.fullname.split(' ')\n                    setValue(entry + '.firstname', parts[0])\n                    setValue(entry + '.lastname', parts[1])\n                }\n                else if (value.firstname !== previousValue.firstname) {\n                    const lastname = getValue(entry + '.lastname') || ''\n                    setValue(entry + '.fullname', (value.firstname || '') + ' ' + lastname)\n                }\n                else if (value.lastname !== previousValue.lastname) {\n                    console.log(value.lastname)\n                    const firstname = getValue(entry + '.firstname') || ''\n                    setValue(entry + '.fullname', firstname + ' ' + (value.lastname || ''))\n                }\n            }\n        },\n        schema: {\n            fullname: {\n                type: \"string\"\n            },\n            firstname: {\n                type: \"string\"\n            },\n            lastname: {\n                type: \"string\"\n            }\n        }\n    }\n}`\n\nexport default schema","import { Form, type as types, constraints } from \"@maif/react-forms\";\nimport React, { useState } from \"react\";\nimport WrapperError from \"./WrapperError\";\nimport schema from \"./schema/storybook.json\";\n\nconst Storybook = () => {\n  const [filter, setFilter] = useState(types.string);\n  return (\n    <div className=\"container\" style={{ marginTop: \"70px\" }}>\n      <div className=\"d-flex\">\n        <div className=\"col-3\" style={{ marginRight: \"10px\" }}>\n          <div\n            style={{\n              backgroundColor: \"#ececec\",\n              marginTop: \"25px\",\n              marginRight: \"15px\",\n              padding: \"15px\"\n            }}\n          >\n            <b>Filter</b>\n            <ul>\n              {Object.keys(types).map((type) => (\n                <li\n                  key={`filter-${type}`}\n                  onClick={() => setFilter(type)}\n                  style={{\n                    cursor: \"pointer\",\n                    textDecoration: \"underline\",\n                    fontWeight: type === filter ? \"bold\" : \"normal\"\n                  }}\n                >\n                  {type}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"col-9\" style={{ marginRight: \"10px\" }}>\n            {Object.keys(schema)\n              .map((item) => ({ key: item, ...schema[item] }))\n              .filter(({ type }) => filter === type)\n              .map(({ key, ...item }, index) => (\n                <WrapperError key={`form-${key}-${index}`}>\n                  <label style={{ fontWeight: \"bold\" }}>\n                    Input type {item.type}\n                    {item.format && ` (format: ${item.format})`}\n                  </label>\n                  <div\n                    style={{\n                      backgroundColor: \"#ececec\",\n                      padding: \"10px 15px\",\n                      marginBottom: \"15px\"\n                    }}\n                  >\n                    <Form\n                      schema={{\n                        [key]: {\n                          constraints: [\n                            constraints.required(`${key} is required`)\n                          ],\n                          ...item\n                        }\n                      }}\n                      flow={[key]}\n                      onSubmit={(d) => alert(JSON.stringify(d, null, 2))}\n                      options={{actions:{submit:{label:\"Show It!\"}}}}\n                    />\n                  </div>\n                </WrapperError>\n              ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Storybook;\n","import React, { useState } from \"react\";\n\nconst Tabs = ({ tabs, defaultTab }) => {\n  const [page, setPage] = useState(defaultTab);\n\n  return (\n    <div className=\"my-md-4 bd-layout\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand\">react-forms playground</span>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              {tabs.map(({ id, label }) => (\n                <li className=\"nav-item\">\n                  <span className=\"nav-link\" onClick={() => setPage(id)}>\n                    {label}\n                  </span>\n                </li>\n              ))}\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  href=\"https://github.com/MAIF/react-forms#readme\"\n                >\n                  Documentation\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link\"\n                  href=\"https://github.com/MAIF/react-forms\"\n                >\n                  Project\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container\" style={{ marginTop: \"70px\" }}>\n        {tabs.find(({ id }) => id === page)?.content}\n      </div>\n    </div>\n  );\n};\nexport default Tabs;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Playground from './Playground';\nimport Storybook from './Storybook';\nimport Tabs from './Tabs';\nimport ReleaseCandidate from './ReleaseCandidate'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Tabs tabs={[\n      {\n        id: \"playground\",\n        label: \"Playground\",\n        content: <Playground />\n      },\n      // {\n      //   id: \"release-candidate\",\n      //   label: \"Release Candidate\",\n      //   content: <ReleaseCandidate />\n      // },\n      {\n        id: \"storybook\",\n        label: \"Storybook\",\n        content: <Storybook />\n      }]}\n      defaultTab=\"playground\" />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}