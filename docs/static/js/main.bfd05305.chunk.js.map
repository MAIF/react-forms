{"version":3,"sources":["WrapperError.js","Playground.js","schema/formArray.js","index.js"],"names":["WrapperError","state","error","undefined","this","setState","props","children","React","Component","examples","basic","largeForm","formArray","constrainedBasic","constraintsWithRef","simpleSelector","formInForm","dynamicForm","Playground","useState","JSON","stringify","schema","setSchema","realSchema","setRealSchema","setError","value","setValue","label","selectedSchema","setSelectedSchema","ref","useRef","childRef","formRef","useEffect","current","reset","babelize","e","code","generatedCode","babel","presets","replace","trim","res","Function","func","_","className","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","href","style","marginTop","marginRight","htmlFor","possibleValues","Object","entries","transformer","onChange","mode","console","log","parse","color","backgroundColor","padding","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","flow","keys","onSubmit","d","alert","options","watch","unsaved","dispatch","changes","from","to","doc","length","insert","actions","submit","setRef","r","showGutter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd05305.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class WrapperError extends React.Component {\n    state = {\n        error: undefined\n    }\n\n    componentDidCatch(error) {\n        this.setState({ error })\n    }\n\n    reset() {\n        this.setState({ error: undefined })\n    }\n\n    render() {\n        if (this.state.error)\n            return <div>Something wrong happened</div>\n        return this.props.children\n    }\n}","import React, { useState, useEffect, useRef, Profiler } from 'react';\nimport { Form, CodeInput, SelectInput } from '@maif/react-forms'\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport basic from './schema/basic.json';\nimport largeForm from './schema/largeForm.json';\nimport formArray from './schema/formArray';\nimport constrainedBasic from './schema/constrainedBasic.json';\nimport constraintsWithRef from './schema/constraintsWithRef.json';\nimport simpleSelector from './schema/selector.json';\nimport formInForm from './schema/formInForm.json';\nimport dynamicForm from './schema/dynamicForm.json';\nimport * as babel from 'babel-standalone'\nimport WrapperError from './WrapperError';\n\nconst examples = {\n  basic,\n  largeForm,\n  formArray,\n  constrainedBasic,\n  constraintsWithRef,\n  simpleSelector,\n  formInForm,\n  dynamicForm\n}\n\nexport const Playground = () => {\n  const [schema, setSchema] = useState(JSON.stringify(largeForm, 0, 2))\n  const [realSchema, setRealSchema] = useState(largeForm)\n  const [error, setError] = useState(undefined)\n  const [value, setValue] = useState()\n  const [selectedSchema, setSelectedSchema] = useState({ value: largeForm, label: \"largeForm\" })\n\n  const ref = useRef()\n  const childRef = useRef()\n  const formRef = useRef()\n\n  useEffect(() => {\n    if (childRef.current)\n      childRef.current.reset()\n    babelize(schema)\n  }, [schema])\n\n  useEffect(() => {\n    setError(undefined)\n  }, [realSchema])\n\n  const babelize = e => {\n    try {\n      const code = `() => { try { return ${(typeof e === 'object' ? JSON.stringify(e, null, 2) : e)} } catch(err) {} }`\n      const babelCode = babel.transform(code, { presets: ['react', 'es2015'] }).code;\n\n      const generatedCode = babelCode.replace('\"use strict\";', \"\").trim()\n      const func = new Function(\"React\", `return ${generatedCode}`);\n      const res = func(React)()\n      if (res)\n        setRealSchema(res)\n    } catch (_) {\n\n    }\n  }\n\n  return (\n    <div className=\"my-md-4 bd-layout\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\n        <div className=\"container-fluid\">\n          <span className=\"navbar-brand\">react-forms playground</span>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/MAIF/react-forms#readme\">Documentation</a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"https://github.com/MAIF/react-forms\">Project</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container\" style={{ marginTop: '70px' }}>\n        <em className='tagline px-0 py-2'>Choose a JSON schema below and check the generated form. Check the <a href='https://github.com/MAIF/react-forms'>documentation</a> for more details.</em>\n        <div className=\"d-flex\">\n          <div className='col-8' style={{ marginRight: '10px' }}>\n            <label htmlFor=\"selector\">Try with a schema</label>\n            <SelectInput\n              className=\"py-2\"\n              possibleValues={Object.entries(examples)}\n              transformer={([key, value]) => ({ label: key, value })}\n              value={selectedSchema}\n              onChange={e => {\n                setSelectedSchema(e)\n                setSchema(e)\n              }}\n            />\n            <CodeInput\n              mode=\"javascript\"\n              onChange={e => {\n                try {\n                  setSchema(e)\n                } catch (error) {\n                  console.log(error)\n                }\n              }}\n              value={typeof schema === 'object' ? JSON.stringify(schema, null, 2) : schema}\n            />\n            <label>Default value</label>\n            <CodeInput\n              mode=\"json\"\n              onChange={e => {\n                try {\n                  setValue(JSON.parse(e))\n                } catch (_) { }\n              }}\n              value={typeof value === 'object' ? JSON.stringify(value, null, 2) : value}\n            />\n          </div>\n          <div className='col-4 px-2'>\n            <label>Generated form</label>\n            {error && <span style={{ color: 'tomato' }}>{error}</span>}\n            <div style={{ backgroundColor: '#ececec', padding: '10px 15px' }}>\n              <WrapperError ref={childRef}>\n                <Profiler id=\"Navigation\" onRender={(id, // la prop \"id\" du Profiler dont l’arborescence vient d’être mise à jour\n                  phase, // soit \"mount\" (si on est au montage) soit \"update\" (pour une mise à jour)\n                  actualDuration, // temps passé à faire le rendu de la mise à jour finalisée\n                  baseDuration, // temps estimé du rendu pour l’ensemble du sous-arbre sans mémoïsation\n                  startTime, // horodatage du début de rendu de cette mise à jour par React\n                  commitTime, // horodatage de la finalisation de cette mise à jour par React\n                  interactions) => {\n                  console.log(phase, actualDuration, baseDuration, startTime)\n                }}>\n                  <Form\n                    ref={formRef}\n                    schema={realSchema}\n                    value={value}\n                    flow={Object.keys(realSchema)}\n                    onSubmit={d => alert(JSON.stringify(d, null, 2))}\n                    options={{\n                      watch: unsaved => {\n                        console.log(unsaved)\n                        ref?.current?.dispatch({\n                          changes: {\n                            from: 0,\n                            to: ref.current.state.doc.length,\n                            insert: JSON.stringify(unsaved, null, 2)\n                          }\n                        })\n                      },\n                      actions: {\n                        submit: {\n                          label: 'Try it'\n                        }\n                      }\n                    }}\n                  />\n                </Profiler>\n              </WrapperError>\n            </div>\n            <div className='py-2'>\n              <label>Form state</label>\n              <CodeInput\n                setRef={r => ref.current = r}\n                showGutter={false}\n                mode=\"json\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Playground;\n","const schema = `{\n    \"users\": {\n        type: \"object\",\n        format: \"form\",\n        array: true,\n        schema: {\n            fullname: {\n                type: \"string\",\n                render: (props) => {\n                    const { setValues, setValue, value, onChange } = props\n                    return <input\n                        type=\"text\"\n                        onChange={e => onChange(e.target.value)}\n                        value={value}\n                    />\n                }\n\n            },\n            firstname: {\n                type: \"string\"\n            },\n            lastname: {\n                type: \"string\"\n            }\n        }\n    }\n}`\n\nexport default schema","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Playground from './Playground';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Playground />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}